/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Universal selector */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

/* VH is ViewHeight, so 95VH is 95% of the view height */
/* Cover to adjust size */
/* clip path cuts the element */
.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        #7ed56fb0,
        #28b485b0),
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
    color: white;
}

.logo {
    height: 35px;
}
.logo:hover {
    animation: rotateClockwise 1.3s infinite linear;
}
.logo-text {
    top: 80px;
    color: white;
}
.logo-text:hover {
    animation: fadeOut 1s ease-out infinite;
}
/* Block elements occupy the entire width available */
/* backface fix the back side of the translated element */
.primary-header {
    color: white;
    text-transform: uppercase;
    backface-visibility: hidden;
}

/* the translate method change the position to the element itself */

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

/* The are 2 properties for animation to be added */
/* Animation name and Animation Duration */
.header-title {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

/* With the animation property you can add all the subproperties to only one line */
.header-subtitle {
    display: block;
    font-size: 20px;
    font-weight: 600;
    letter-spacing: 17.5px;
    animation: moveInRight 1s ease-out;
    margin-bottom: 60px;
}

/* Transition properties */
/* The browser is optmized to only two properties */
/* Opacity and transform */

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }
/* 166px */
    55% {
        opacity: .5;
        transform: translateX(66px);
    }
/* 265 */
    89% {
        opacity: .8;
        transform: translateX(-33px);
    }
/* 298 */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    55% {
        opacity: .5;
        transform: translateX(-66px);
    }

    89% {
        opacity: .8;
        transform: translateX(33px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes rotateClockwise {
    0% {
        transform: rotate(0);
    }
    50% {
        transform: rotate(180deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

/* Pseudo-classes */
/* border-radius shapes the edges */
/* transition used for the border shadow */
.btn:link, .btn:visited {
    padding: 15px 40px;
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    background-color: white;
    color: #777;
    border-radius: 100px;
    transition: all .2s;
    position: relative;
    animation: moveInButtomBottom 1s ease-out;
    backface-visibility: hidden;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.4);
}

/* ACTIVE is the pseudo class for click */
/* the translate is in relation to the link pseudo class not the hover */
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.4)
}

/* After Pseudo element */
/* is is treated as the child of the button, that is why we use the 100% dimensions */
/* content is always necessary */
/*? Absolute position is related to the last relative position parent */
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    position: absolute;
    border-radius: 100px;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}
.btn-white::after {
    background-color: white;
}

/*!!!: The animation can be done by adding the animation by !keyframe or directly */
.btn:hover::after {
    /* animation: bigger .4s; */
    transform: scale(1.6, 1.3);
    opacity: 0;
}

/* When using animations by keyframes they only happen once when it is activated */
/* @keyframes bigger {
    0% {
        opacity: 1;
        transform: scale(0);
    }
    100% {
        transform: scaleX(1.6) scaleY(1.4);
        opacity: 0;
    }
} */

@keyframes moveInButtomBottom {
    0% {
        opacity: 0;
        transform: translateY(30px)
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}
